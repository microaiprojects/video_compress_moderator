version: '3.8'

services:
  frontend:
    image: ghcr.io/microaiprojects/video_compress_moderator/frontend:latest
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT}:80"
    volumes:
      - ${VIDEO_FOLDER}:/videos:ro
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    image: ghcr.io/microaiprojects/video_compress_moderator/backend:latest
    env_file:
      - .env
    expose:
      - "${BACKEND_PORT}:8080"
    environment:
      - GIN_MODE=${GIN_MODE}
      # Local DB connection
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      # Immich DB connection
      - IMMICH_DB_HOST=${IMMICH_DB_HOST}
      - IMMICH_DB_PORT=${IMMICH_DB_PORT}
      - IMMICH_DB_USERNAME=${IMMICH_DB_USERNAME}
      - IMMICH_DB_PASSWORD=${IMMICH_DB_PASSWORD}
      - IMMICH_DB_NAME=${IMMICH_DB_NAME}
      # Immich API configuration
      - IMMICH_HOST=${IMMICH_HOST}
      - IMMICH_TOKEN=${IMMICH_TOKEN}
      # Path configuration
      - IMMICH_UPLOAD_PATH=${IMMICH_UPLOAD_PATH}
      - VIDEO_PATH=${VIDEO_PATH}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    env_file:
      - .env
    expose:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./postgres_data
